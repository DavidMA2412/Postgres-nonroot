apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-kafka
  labels:
    app.kubernetes.io/version: "0.3"
  annotations:
    tekton.dev/pipelines.minVersion: "0.21.0"
    tekton.dev/displayName: "deploy-kafka"
spec:
  description: >-
    deploy-kafka
  workspaces:
    - name: source
      description: shared workspace 
  steps:
    - name: deploy-kafka
      image: image-registry.openshift-image-registry.svc:5000/openshift/cli
      script: |
        #!/bin/bash
        oc project kafka > /dev/null 2>&1
        if [ $? != 0 ]; 
        then 
          oc new-project kafka
        fi

        ROUTE_KAFKA=$(oc get route my-cluster-kafka-external-bootstrap --template='{{ .spec.host }}')
        if [ -z "$ROUTE_KAFKA" ]
        then
          curl -L https://github.com/strimzi/strimzi-kafka-operator/releases/download/0.15.0/strimzi-cluster-operator-0.15.0.yaml \
            | sed 's/namespace: .*/namespace: kafka/' \
            | oc apply -f - -n kafka 

          oc apply -f $(workspaces.source.path)/scripts-openshift/kafka-cluster.yaml -n kafka 
          oc expose svc/my-cluster-kafka-external-bootstrap --port=9094
          
          echo "Done installing Kafka."
          echo "It takes 2-4 minutes for Kafka to come up."
        else
          echo "Kafka already installed."
          echo "To reinstall invoke 'oc delete project kafka' and rerun 'sh tekton/deploy-kafka.sh'."
        fi